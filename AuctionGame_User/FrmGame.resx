<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pboxCurrentProduct.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>